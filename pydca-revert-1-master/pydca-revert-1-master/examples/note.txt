
1. trimmed_data = trimmer.get_msa_trimmed_by_refseq(remove_all_gaps=True)----command given from main file

2. columns_to_remove = self.trim_by_refseq(remove_all_gaps=remove_all_gaps)---command given from get_msa_trimmed_by_refseq

3. trim_by_refseq--btains columns in MSA that contain gaps more that the gap treshold
        and do not involve residues in the best matchin sequence with reference.

4. seqbackmapper = SequenceBackmapper----command given from trim_by_refseq

5. SequenceBackmapper:-------Defines a sequence backmapper class. Instances of SequenceBackmapper perform
    mapping of a reference sequence to the best matching sequence in the multiple
    sequence alignment (MSA) data.

6. fasta_reader.get_alignment_char_form---command given by SequenceBackmapper:

7. reads all the files returns the sequences

8. the final output is from get_msa_trimmed_by_reference -------------returns trimmed_msa-----
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
visualizer:

1. contact_map_data = plmdca_visualizer.plot_contact_map()
--"""Plots the contact map of an RNA or protein by calling the respective
        methods.
2. contact_categories_dict = self._plot_contact_map_rna()
--"""Plots RNA contact map and returns the contact categories dict.
3. contact_categories_dict = self.contact_categories()
-- """Categorizes contacts to true positives, false positives, missing in
        PDB or PDB contacts.
4. mapped_pdb_contacts, missing_residues = self.get_mapped_pdb_contacts()
"""Collects all resisdue contacts that are within a cut-off distance
        as specified by self.__contact_dist parameter
5.

